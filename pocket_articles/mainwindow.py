# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/alexandr/PycharmProjects/Pocket/pocket_articles/ui/mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Window")
        MainWindow.resize(958, 649)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("/home/alexandr/PycharmProjects/Pocket/pocket_articles/ui/../icons/icons8-pocket_128px.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.splitter_2 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.tagsFrame = QtWidgets.QFrame(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tagsFrame.sizePolicy().hasHeightForWidth())
        self.tagsFrame.setSizePolicy(sizePolicy)
        self.tagsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.tagsFrame.setObjectName("tagsFrame")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tagsFrame)
        self.verticalLayout_3.setContentsMargins(5, 5, 5, 5)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_3 = QtWidgets.QLabel(self.tagsFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_3.addWidget(self.label_3)
        self.tagsView = QtWidgets.QTreeView(self.tagsFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.tagsView.sizePolicy().hasHeightForWidth())
        self.tagsView.setSizePolicy(sizePolicy)
        self.tagsView.setMinimumSize(QtCore.QSize(50, 50))
        self.tagsView.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.tagsView.setLineWidth(0)
        self.tagsView.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tagsView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tagsView.setAnimated(True)
        self.tagsView.setObjectName("tagsView")
        self.verticalLayout_3.addWidget(self.tagsView)
        self.splitter = QtWidgets.QSplitter(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(9)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())
        self.splitter.setSizePolicy(sizePolicy)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.articleListFrame = QtWidgets.QFrame(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.articleListFrame.sizePolicy().hasHeightForWidth())
        self.articleListFrame.setSizePolicy(sizePolicy)
        self.articleListFrame.setStyleSheet("")
        self.articleListFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.articleListFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.articleListFrame.setObjectName("articleListFrame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.articleListFrame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.filterArticleLineEdit = QtWidgets.QLineEdit(self.articleListFrame)
        self.filterArticleLineEdit.setFrame(True)
        self.filterArticleLineEdit.setClearButtonEnabled(True)
        self.filterArticleLineEdit.setObjectName("filterArticleLineEdit")
        self.horizontalLayout.addWidget(self.filterArticleLineEdit)
        self.dbSearch = QtWidgets.QLineEdit(self.articleListFrame)
        self.dbSearch.setClearButtonEnabled(True)
        self.dbSearch.setObjectName("dbSearch")
        self.horizontalLayout.addWidget(self.dbSearch)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.articleView = QtWidgets.QTableView(self.articleListFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.articleView.sizePolicy().hasHeightForWidth())
        self.articleView.setSizePolicy(sizePolicy)
        self.articleView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.articleView.setAlternatingRowColors(True)
        self.articleView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.articleView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.articleView.setSortingEnabled(True)
        self.articleView.setWordWrap(False)
        self.articleView.setCornerButtonEnabled(False)
        self.articleView.setObjectName("articleView")
        self.articleView.horizontalHeader().setDefaultSectionSize(150)
        self.articleView.horizontalHeader().setMinimumSectionSize(150)
        self.articleView.horizontalHeader().setStretchLastSection(True)
        self.articleView.verticalHeader().setVisible(False)
        self.articleView.verticalHeader().setDefaultSectionSize(19)
        self.articleView.verticalHeader().setMinimumSectionSize(0)
        self.verticalLayout.addWidget(self.articleView)
        self.articleViewFrame = QtWidgets.QFrame(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(8)
        sizePolicy.setHeightForWidth(self.articleViewFrame.sizePolicy().hasHeightForWidth())
        self.articleViewFrame.setSizePolicy(sizePolicy)
        self.articleViewFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.articleViewFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.articleViewFrame.setObjectName("articleViewFrame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.articleViewFrame)
        self.verticalLayout_2.setContentsMargins(5, 5, 5, 5)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.pageTitleLabel = QtWidgets.QLabel(self.articleViewFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.pageTitleLabel.sizePolicy().hasHeightForWidth())
        self.pageTitleLabel.setSizePolicy(sizePolicy)
        self.pageTitleLabel.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.pageTitleLabel.setObjectName("pageTitleLabel")
        self.verticalLayout_2.addWidget(self.pageTitleLabel)
        self.webView = QtWebEngineWidgets.QWebEngineView(self.articleViewFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(8)
        sizePolicy.setHeightForWidth(self.webView.sizePolicy().hasHeightForWidth())
        self.webView.setSizePolicy(sizePolicy)
        self.webView.setMinimumSize(QtCore.QSize(50, 50))
        self.webView.setObjectName("webView")
        self.verticalLayout_2.addWidget(self.webView)
        self.gridLayout_2.addWidget(self.splitter_2, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 958, 21))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.viewMenu = QtWidgets.QMenu(self.menubar)
        self.viewMenu.setObjectName("viewMenu")
        self.sortArticlesSubmenu = QtWidgets.QMenu(self.viewMenu)
        self.sortArticlesSubmenu.setTearOffEnabled(False)
        self.sortArticlesSubmenu.setObjectName("sortArticlesSubmenu")
        self.serviceMenu = QtWidgets.QMenu(self.menubar)
        self.serviceMenu.setObjectName("serviceMenu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionImportHtml = QtWidgets.QAction(MainWindow)
        self.actionImportHtml.setEnabled(True)
        self.actionImportHtml.setWhatsThis("")
        self.actionImportHtml.setObjectName("actionImportHtml")
        self.exportDataBaseAction = QtWidgets.QAction(MainWindow)
        self.exportDataBaseAction.setObjectName("exportDataBaseAction")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionNewDB = QtWidgets.QAction(MainWindow)
        self.actionNewDB.setObjectName("actionNewDB")
        self.actionNewDBPocket = QtWidgets.QAction(MainWindow)
        self.actionNewDBPocket.setObjectName("actionNewDBPocket")
        self.actionAppAuth = QtWidgets.QAction(MainWindow)
        self.actionAppAuth.setObjectName("actionAppAuth")
        self.actionOpenDbase = QtWidgets.QAction(MainWindow)
        self.actionOpenDbase.setObjectName("actionOpenDbase")
        self.actionSortDateDesc = QtWidgets.QAction(MainWindow)
        self.actionSortDateDesc.setCheckable(True)
        self.actionSortDateDesc.setChecked(True)
        self.actionSortDateDesc.setEnabled(True)
        self.actionSortDateDesc.setObjectName("actionSortDateDesc")
        self.actionSortDateAsc = QtWidgets.QAction(MainWindow)
        self.actionSortDateAsc.setCheckable(True)
        self.actionSortDateAsc.setObjectName("actionSortDateAsc")
        self.actionSortTitleDesc = QtWidgets.QAction(MainWindow)
        self.actionSortTitleDesc.setCheckable(True)
        self.actionSortTitleDesc.setObjectName("actionSortTitleDesc")
        self.actionSortTitleAsc = QtWidgets.QAction(MainWindow)
        self.actionSortTitleAsc.setCheckable(True)
        self.actionSortTitleAsc.setObjectName("actionSortTitleAsc")
        self.actionExportTagsTable = QtWidgets.QAction(MainWindow)
        self.actionExportTagsTable.setObjectName("actionExportTagsTable")
        self.actionExportArticleTags = QtWidgets.QAction(MainWindow)
        self.actionExportArticleTags.setObjectName("actionExportArticleTags")
        self.actionImportTags = QtWidgets.QAction(MainWindow)
        self.actionImportTags.setObjectName("actionImportTags")
        self.actionImportArticleTags = QtWidgets.QAction(MainWindow)
        self.actionImportArticleTags.setObjectName("actionImportArticleTags")
        self.menu.addAction(self.actionNewDB)
        self.menu.addAction(self.actionNewDBPocket)
        self.menu.addAction(self.actionOpenDbase)
        self.menu.addSeparator()
        self.menu.addAction(self.actionImportHtml)
        self.menu.addAction(self.exportDataBaseAction)
        self.menu.addSeparator()
        self.menu.addAction(self.actionExit)
        self.sortArticlesSubmenu.addAction(self.actionSortDateDesc)
        self.sortArticlesSubmenu.addAction(self.actionSortDateAsc)
        self.sortArticlesSubmenu.addAction(self.actionSortTitleDesc)
        self.sortArticlesSubmenu.addAction(self.actionSortTitleAsc)
        self.viewMenu.addAction(self.sortArticlesSubmenu.menuAction())
        self.serviceMenu.addAction(self.actionAppAuth)
        self.serviceMenu.addSeparator()
        self.serviceMenu.addAction(self.actionExportTagsTable)
        self.serviceMenu.addAction(self.actionExportArticleTags)
        self.serviceMenu.addSeparator()
        self.serviceMenu.addAction(self.actionImportTags)
        self.serviceMenu.addAction(self.actionImportArticleTags)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.viewMenu.menuAction())
        self.menubar.addAction(self.serviceMenu.menuAction())

        self.retranslateUi(MainWindow)
        self.actionExit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("Window", "Pocket Articles"))
        self.label_3.setText(_translate("Window", "Теги сохраненных статей"))
        self.filterArticleLineEdit.setToolTip(_translate("Window", "<html><head/><body><p>Поиск по части слова: <span style=\" font-weight:600;\">программ*</span> (программа, программирование...).</p><p>Словосочетание с дефисом: <span style=\" font-weight:600;\">&quot;медиа-сервер&quot;</span> (заключить в кавычки).</p><p>Найти словосочетание: <span style=\" font-weight:600;\">&quot;вкусный обед&quot;</span> (заключить в кавычки).</p><p>Словосочетание: <span style=\" font-weight:600;\">вкусный обед</span> (найдет в любом порядке).</p></body></html>"))
        self.filterArticleLineEdit.setPlaceholderText(_translate("Window", "Фильтр"))
        self.dbSearch.setToolTip(_translate("Window", "<html><head/><body><p>Поиск по части слова: <span style=\" font-weight:600;\">программ*</span> (программа, программирование...).</p><p>Словосочетание с дефисом: <span style=\" font-weight:600;\">&quot;медиа-сервер&quot;</span> (заключить в кавычки).</p><p>Найти словосочетание: <span style=\" font-weight:600;\">&quot;вкусный обед&quot;</span> (заключить в кавычки).</p><p>Словосочетание: <span style=\" font-weight:600;\">вкусный обед</span> (найдет в любом порядке).</p></body></html>"))
        self.dbSearch.setPlaceholderText(_translate("Window", "Поиск по базе данных"))
        self.pageTitleLabel.setText(_translate("Window", "Просмотр статьи"))
        self.menu.setTitle(_translate("Window", "Файл"))
        self.viewMenu.setTitle(_translate("Window", "Вид"))
        self.sortArticlesSubmenu.setTitle(_translate("Window", "Сортировать статьи по"))
        self.serviceMenu.setTitle(_translate("Window", "Сервис"))
        self.actionImportHtml.setText(_translate("Window", "Импорт html из папки"))
        self.actionImportHtml.setStatusTip(_translate("Window", "Импорт сохраненных страниц"))
        self.exportDataBaseAction.setText(_translate("Window", "Экспорт статей в html"))
        self.exportDataBaseAction.setStatusTip(_translate("Window", "Экспортировать базу данных в HTML"))
        self.actionExit.setText(_translate("Window", "Выход"))
        self.actionExit.setStatusTip(_translate("Window", "Выход"))
        self.actionNewDB.setText(_translate("Window", "Новая БД"))
        self.actionNewDB.setToolTip(_translate("Window", "Новая БД"))
        self.actionNewDB.setStatusTip(_translate("Window", "Создать новую базу данных"))
        self.actionNewDBPocket.setText(_translate("Window", "Новая БД Pocket"))
        self.actionNewDBPocket.setStatusTip(_translate("Window", "Создать новую базу данных используя Pocket"))
        self.actionAppAuth.setText(_translate("Window", "Аутентификация в Pocket"))
        self.actionAppAuth.setStatusTip(_translate("Window", "Аутентификация приложения в Pocket"))
        self.actionOpenDbase.setText(_translate("Window", "Открыть другую базу"))
        self.actionSortDateDesc.setText(_translate("Window", "Дате [desc]"))
        self.actionSortDateAsc.setText(_translate("Window", "Дате [asc]"))
        self.actionSortTitleDesc.setText(_translate("Window", "Названию [desc]"))
        self.actionSortTitleAsc.setText(_translate("Window", "Названию [asc]"))
        self.actionExportTagsTable.setText(_translate("Window", "Экспортировать таблицу тегов"))
        self.actionExportTagsTable.setStatusTip(_translate("Window", "Экспртировать таблицу тегов"))
        self.actionExportArticleTags.setText(_translate("Window", "Экспортировать теги статей"))
        self.actionExportArticleTags.setStatusTip(_translate("Window", "Экспортировать таблицу тегов статей"))
        self.actionImportTags.setText(_translate("Window", "Импорт тегов"))
        self.actionImportTags.setToolTip(_translate("Window", "Импорт тегов"))
        self.actionImportTags.setStatusTip(_translate("Window", "Импорт тегов из json файла"))
        self.actionImportArticleTags.setText(_translate("Window", "Импорт тегов статей"))
        self.actionImportArticleTags.setStatusTip(_translate("Window", "Импорт тегов статей из json файла"))
from PyQt5 import QtWebEngineWidgets
